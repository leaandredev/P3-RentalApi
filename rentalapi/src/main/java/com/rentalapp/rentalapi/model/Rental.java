package com.rentalapp.rentalapi.model;

import java.time.LocalDateTime;

import org.hibernate.annotations.DynamicUpdate;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.PrePersist;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/** Entity representing a rental property */
@Data
@Entity
@DynamicUpdate
@AllArgsConstructor
@NoArgsConstructor
@Table(name = "rentals")
public class Rental {

    /** Primary key, autogenerated */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id;

    /** Name of the rental property */
    private String name;

    /** Surface area (m2) */
    @Column(precision = 10, scale = 0)
    private Integer surface;

    /** Rental price per night */
    @Column(precision = 10, scale = 0)
    private Integer price;

    /** Absolut URL to the property picture */
    private String picture;

    /** Rental property description */
    private String description;

    /** Owner of the rental */
    @ManyToOne
    @JoinColumn(name = "owner_id")
    private User owner;

    /** Timestamp of creation, set once and not updatable. */
    @Column(name = "created_at", nullable = false, updatable = false)
    private LocalDateTime createdAt;

    /** Timestamp of the last update. */
    @Column(name = "updated_at", nullable = false)
    private LocalDateTime updatedAt;

    /** Initializes `createdAt` and `updatedAt` before persisting */
    @PrePersist
    protected void onCreate() {
        this.createdAt = LocalDateTime.now();
        this.updatedAt = this.createdAt;
    }

}
